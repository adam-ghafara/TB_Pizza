<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>