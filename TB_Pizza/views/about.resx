<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>